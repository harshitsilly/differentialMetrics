{"version":3,"sources":["../src/server.ts"],"names":[],"mappings":"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","sourcesContent":["require(\"dotenv\").config();\nconst express = require(\"express\");\nconst { getDiffferentialDownload } = require(\"./differentialUpdate\");\n\nimport { client } from \"./redis\";\nimport {\n  indexing,\n  getLast5Version,\n  getLastModifiedTime\n} from \"./elasticSearch/updater\";\nimport { formatBytes } from \"./utils\";\nconst { S3_Url, PORT } = process.env;\nconst got = require(\"got\");\nconst yaml = require(\"yaml\");\nconst xml2json = require(\"xml2json\");\n\n// create new express app and save it as \"app\"\nconst app = express();\n\n// create a route for the app\nconst returnLast5PromotedVersion = async (env, res, update, bMac) => {\n  const response = await getLast5Version(env, bMac);\n  return res.send({\n    latest: update.version,\n    size: formatBytes(parseInt(update.files[0].size)),\n    last: response\n  });\n};\n\napp.get(\"/differentialData\", async (req, res) => {\n  const { from, to } = req.query;\n  const response = await getDiffferentialDownload(from, to);\n  res.send({ ...response, to, from });\n});\n\napp.get(\"/lastnDifferentialData\", async (req, res) => {\n  const { to } = req.query;\n  const env = to.split(\"/\")[0];\n  const isMac = to.indexOf(\".zip\") > -1;\n  const versionTime = await getLastModifiedTime(to);\n  const appVersions = await getLast5Version(env, isMac, versionTime);\n  const response = await Promise.all(\n    appVersions\n      .filter(version => version !== to)\n      .map(async version => await getDiffferentialDownload(version, to))\n  );\n  res.send([...response]);\n});\n\napp.get(\"/last5PromotedVersion\", async (req, res) => {\n  const { env, isMac } = req.query;\n  const bMac = isMac === \"true\" ? true : false;\n  const ymlUpdateFile = bMac ? \"latest-mac.yml\" : \"latest.yml\";\n  client.get(`${ymlUpdateFile}/${env}`, async (_err: Error, update) => {\n    update = JSON.parse(update);\n    // const latest = appnameMac?.replace('VERSION', update.version);\n    if (update) {\n      return returnLast5PromotedVersion(env, res, update, bMac);\n    }\n\n    const response = await got(`${S3_Url}/${env}/${ymlUpdateFile}`, {\n      responseType: \"text\"\n    });\n\n    const s3response = await got(`${S3_Url}`, {\n      responseType: \"text\"\n    });\n    const updateData = yaml.parse(response.body);\n    const s3Data = xml2json.toJson(s3response.body);\n    client.setex(`${ymlUpdateFile}/${env}`, 1440, JSON.stringify(updateData));\n    client.setex(\"s3Data\", 1440, s3Data);\n    return returnLast5PromotedVersion(env, res, updateData, bMac);\n  });\n});\n\napp.get(\"/indexing\", async (req, res) => {\n  const s3response = await got(`${S3_Url}`, {\n    responseType: \"text\"\n  });\n  const s3Data = xml2json.toJson(s3response.body);\n  client.setex(\"s3Data\", 1440, s3Data);\n  const response = await indexing();\n  res.send(response);\n});\n\n// make the server listen to requests\napp.listen(PORT, () => {\n  console.log(`Server running at: http://localhost:${PORT}/`);\n});\n\n// tasks when updating index avoid duplicate entry\n"],"sourceRoot":""}
