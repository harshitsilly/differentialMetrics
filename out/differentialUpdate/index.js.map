{"version":3,"sources":["../../src/differentialUpdate/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AACA,IAAA,SAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;AAEA,IAAM,GAAG,GAAG,OAAO,CAAC,GAAR,CAAY,MAAxB;;AAEA,SAAsB,wBAAtB,CAA+C,IAA/C,EAA6D,EAA7D,EAAuE;;;;;;;AAC/D,UAAA,MAAM,GAAG,OAAT;AACc,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAA,CAAA,gBAAA,CAAoB,GAAG,GAAA,GAAH,GAAO,IAA3B,CAAN,CAAA;;;AAAd,UAAA,WAAW,GAAG,EAAA,CAAA,IAAA,EAAd;AACc,iBAAA,CAAA;AAAA;AAAA,YAAM,SAAA,CAAA,gBAAA,CAAoB,GAAG,GAAA,GAAH,GAAO,EAA3B,CAAN,CAAA;;;AAAd,UAAA,WAAW,GAAG,EAAA,CAAA,IAAA,EAAd;AAIA,UAAA,UAAU,GAAG,OAAA,CAAA,iBAAA,CAAkB,WAAlB,EAA+B,WAA/B,EAA4C,MAA5C,CAAb;;AACN,cAAI,MAAM,CAAC,KAAP,IAAgB,IAApB,EAA0B;AACxB,YAAA,MAAM,CAAC,KAAP,CAAa,IAAI,CAAC,SAAL,CAAe,UAAf,EAA2B,IAA3B,EAAiC,CAAjC,CAAb;AACD;;AACG,UAAA,YAAY,GAAG,CAAf;AACA,UAAA,QAAQ,GAAG,CAAX;;AACJ,eAAA,EAAA,GAAA,CAAA,EAAwB,YAAA,GAAA,UAAxB,EAAwB,EAAA,GAAA,YAAA,CAAA,MAAxB,EAAwB,EAAA,EAAxB,EAAoC;AAAzB,YAAA,SAAS,GAAA,YAAA,CAAA,EAAA,CAAT;AACH,YAAA,QAAA,GAAS,SAAS,CAAC,GAAV,GAAgB,SAAS,CAAC,KAAnC;;AACN,gBAAI,SAAS,CAAC,IAAV,KAAmB,OAAA,CAAA,aAAA,CAAc,QAArC,EAA+C;AAC7C,cAAA,YAAY,IAAI,QAAhB;AACD,aAFD,MAEO;AACL,cAAA,QAAQ,IAAI,QAAZ;AACD;AACF;;AAED,iBAAA,CAAA;AAAA;AAAA,YAAO;AACL,YAAA,EAAE,EAAA,EADG;AAEL,YAAA,IAAI,EAAA,IAFC;AAGL,YAAA,UAAU,EAAE,OAAA,CAAA,WAAA,CAAY,YAAZ,CAHP;AAIL,YAAA,WAAW,EAAE,OAAA,CAAA,WAAA,CAAY,QAAQ,GAAG,YAAvB;AAJR,WAAP,CAAA;;;;AAMD;;AA5BD,OAAA,CAAA,wBAAA,GAAA,wBAAA,C","sourcesContent":["// https://s3-us-west-2.amazonaws.com/kepler-desktop-ota.keystone/dev1/Western%20Digital%20Discovery_dev1-1.0.0-633-mac.zip.blockmap\nimport { computeOperations, OperationKind } from \"./check\";\nimport { downloadBlockMap } from \"./prepare\";\nimport { formatBytes } from \"../utils\";\n\nconst url = process.env.S3_Url;\n\nexport async function getDiffferentialDownload(from: string, to: string) {\n  const logger = console;\n  const oldBlockMap = await downloadBlockMap(`${url}/${from}`);\n  const newBlockMap = await downloadBlockMap(`${url}/${to}`);\n  // const oldBlockMap = await downloadBlockMap(`${url}Western Digital Discovery_dev1 Setup 1.0.0-816.exe.blockmap`);\n  // const newBlockMap = await downloadBlockMap(`${url}Western Digital Discovery_dev1 Setup 1.0.0-857.exe.blockmap`);\n\n  const operations = computeOperations(oldBlockMap, newBlockMap, logger);\n  if (logger.debug != null) {\n    logger.debug(JSON.stringify(operations, null, 2));\n  }\n  let downloadSize = 0;\n  let copySize = 0;\n  for (const operation of operations) {\n    const length = operation.end - operation.start;\n    if (operation.kind === OperationKind.DOWNLOAD) {\n      downloadSize += length;\n    } else {\n      copySize += length;\n    }\n  }\n\n  return {\n    to,\n    from,\n    toDownload: formatBytes(downloadSize),\n    totalUpdate: formatBytes(copySize + downloadSize)\n  };\n}\n"],"sourceRoot":""}
